name: Release

on:
  push:
    branches:
      - master
      - main
  workflow_dispatch:
    inputs:
      version:
        description: "Version to release (e.g., 1.2.3 or v1.2.3) - Leave empty to auto-increment patch"
        required: false
      prerelease:
        description: "Mark release as prerelease"
        type: boolean
        required: false
        default: false

permissions:
  contents: write

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout main repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.repository.default_branch }}
          fetch-depth: 0  # Fetch all tags for version calculation

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build with Vite
        run: npm run build

      - name: Verify build output
        run: |
          echo "Build output verification:"
          ls -la dist/
          echo ""
          echo "Checking bundle sizes:"
          du -h dist/*.mjs dist/*.umd.js
          echo ""
          echo "Checking that webskel.mjs contains all utilities:"
          grep -c "export" dist/webskel.mjs || echo "No exports found in webskel.mjs"

      - name: Determine version
        id: version
        run: |
          if [ -n "${{ github.event.inputs.version }}" ]; then
            # Use provided version
            VERSION="${{ github.event.inputs.version }}"
          else
            # Get latest release version from releases repository and increment patch
            echo "Fetching latest release from webskel-releases..."
            LATEST_TAG=$(gh release list --repo OutfinityResearch/webskel-releases --limit 1 --json tagName --jq '.[0].tagName // "v0.0.0"' || echo "v0.0.0")
            echo "Latest tag: $LATEST_TAG"
            
            # Remove 'v' prefix if present and split version
            VERSION_WITHOUT_V=${LATEST_TAG#v}
            IFS='.' read -r MAJOR MINOR PATCH <<< "$VERSION_WITHOUT_V"
            
            # Increment patch version
            PATCH=$((PATCH + 1))
            VERSION="${MAJOR}.${MINOR}.${PATCH}"
            echo "Auto-incremented version: $VERSION"
          fi
          
          echo "version=$VERSION" >> "$GITHUB_OUTPUT"
        env:
          GITHUB_TOKEN: ${{ secrets.GIT_TOKEN }}

      - name: Checkout releases repository
        uses: actions/checkout@v4
        with:
          repository: OutfinityResearch/webskel-releases
          token: ${{ secrets.GIT_TOKEN }}
          path: webskel-releases

      - name: Copy bundles to releases repository
        run: |
          cp -f dist/webskel.mjs webskel-releases/webskel.mjs
          cp -f dist/webskel.umd.js webskel-releases/webskel.umd.js
          echo "Bundles copied to releases repository:"
          ls -la webskel-releases/

      - name: Compute tag name
        id: tag
        run: |
          VERSION='${{ steps.version.outputs.version }}'
          if [[ "$VERSION" =~ ^v ]]; then TAG="$VERSION"; else TAG="v$VERSION"; fi
          echo "tag=$TAG" >> "$GITHUB_OUTPUT"

      - name: Commit, tag, and push to releases repository
        working-directory: webskel-releases
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add webskel.mjs webskel.umd.js
          if git diff --cached --quiet; then
            echo "No bundle changes to commit"
          else
            echo "Committing bundles for version ${{ steps.version.outputs.version }}"
            git commit -m "chore(release): add Vite bundles for ${{ steps.version.outputs.version }}"
            git tag -a "${{ steps.tag.outputs.tag }}" -m "Release ${{ steps.version.outputs.version }}"
            git push
            git push origin "${{ steps.tag.outputs.tag }}"
          fi

      - name: Create GitHub Release in releases repository
        working-directory: webskel-releases
        run: |
          gh release create "${{ steps.tag.outputs.tag }}" \
            --repo OutfinityResearch/webskel-releases \
            --title "${{ steps.version.outputs.version }}" \
            --notes "$(cat <<'EOF'
          ## WebSkel ${{ steps.version.outputs.version }}
          
          ### Bundle Files
          - `webskel.mjs` - All utilities and main class (ES Module)
          - `webskel.umd.js` - All utilities and main class (UMD)
          
          ### Import Examples
          \`\`\`javascript
          // Import everything
          import { sanitize, getBrowser, WebSkel } from 'webskel';
          
          // Import main class only
          import { WebSkel } from 'webskel/webskel';
          
          // Import specific utilities
          import { sanitize } from 'webskel/dom-utils';
          import { showModal } from 'webskel/modal-utils';
          \`\`\`
          
          ### Features
          - ✅ Tree-shaking friendly imports
          - ✅ Individual utility exports
          - ✅ ES Module and UMD support
          - ✅ Optimized bundle sizes
          EOF
          )" \
            ${{ github.event.inputs.prerelease == 'true' && '--prerelease' || '' }} \
            webskel.mjs webskel.umd.js
        env:
          GITHUB_TOKEN: ${{ secrets.GIT_TOKEN }}

